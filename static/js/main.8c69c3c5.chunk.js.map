{"version":3,"sources":["Header.js","useScrollIntoView.js","Home.js","About.js","os resources/cpu-scheduling.js","os resources/DrawCpuAlgorithmsOnCanvas.js","CpuSchedulingVisulaizer.js","os resources/memory-managment.js","os resources/DrawDemadPagingOnCanvas.js","MemoryManagmentVisualizer.js","os resources/disk-scheduling.js","os resources/DrawDiskAlgorithmOnCanvas.js","DiskSchedulingVisualizer.js","Footer.js","index.js"],"names":["Header","closeBtn","useRef","navBtn","className","id","href","type","ref","to","onClick","current","click","tabIndex","src","useScrollIntoView","useEffect","document","querySelector","scrollIntoView","Home","props","style","minHeight","textAlign","alt","About","processInfo","arrival","burst","priority","this","remaining","finish","turnaround","wait","response","CpuScheduling","process_ary","sort_by","process_list","process","new_process","push","sort","old_time","new_time","process_id","result","gantt_chart","time_elapsed","updateGanttChart","a","b","length","avg_turnaround","avg_wait","avg_response","final_state","createProcessList","adjustTimingAndResponse","calculateFinalState","shortest_job","next_arrived","time_before_arrival","time_quantum","top_process","ready_queue","shift","run_time","priority_cmp","console","table","state","log","firstComeFirstServe","showResult","shortestJobFirst","shortestRemainingTimeFirst","roundRobin","priorityNonPreemptive","priorityPreemptive","DrawCpuAlgorithmOnCanvas","cpuScheduler","priority_greater","priority_lesser","algorithms","fcfs","excute","bind","name","sjf","srtf","rr","pnp","pp","colors","container","select","width","window","getComputedStyle","getPropertyValue","slice","display","innerHTML","appendChild","getFinalState","drawCpuSchedulingAlgorithm","algoName","createElement","algoInfo","averageInfo","tableInfo","textContent","toFixed","body","ganttChart","height","canvas","size","font","setAttribute","ctx","getContext","strokeStyle","fillStyle","lineWidth","x","y","factor","fillText","prev_x","rect_size","time","fillRect","CpuSchedulingVisualizer","useState","processes","setProcesses","error","setError","resultContainer","updateProcess","prop","value","prevState","newState","positiveNum","parseInt","NaN","selected","timeQuantum","aglorithms","setAlgorithms","maxHeight","newProcess","brust","map","algo","drawSelectedCpuSchedulingAlgorithm","scope","index","onChange","e","target","remove_id","filter","item","i","xmlns","fill","class","viewBox","d","checked","htmlFor","undefined","disabled","DemandPaging","frame_list","replacement_page","new_page","to_replace","page_faults","page_list","frame_size","fault_count","first_come_page","page","includes","updateReplacement","page_idx","lru_counter","count","page_id","lru_idx","count_idx","next_page_id_list","curr_idx","indexOf","next_page_id","replacement","old_id","frame_id","present_page","info","info_str","firstComeFirstOutReplacement","leastRecentlyUsedReplacement","optimalReplacement","DrawDemandPagingOnCanvas","memory_manager","optimal","lru","pageList","frameSize","displayProp","getAglorithmData","drawMemoryManagmentAlgorithm","faultCount","requests","agloData","missRatio","hitRatio","pageFaults","faultInfo","newPage","frameList","pageInfo","status","MemoryManagmentVisualizer","request","pagingData","setPagingData","updatePagingData","charCode","charCodeAt","onSubmit","preventDefault","innerHTMl","selectedAlgo","split","strNum","Math","abs","forEach","endReq","Object","is","pop","drawSelectedMemoryManagmentAlgorithms","DiskScheduling","head","history","movement","block","min_seek","splice","end","m","left","right","temp","dir","shortestSeekTime","Scan","Look","Cscan","Clook","drawDiskSchedulingAlgorithmOnCanvas","disk_scheduler","sst","scan","look","cscan","clook","algorithm","canvasInfo","algorithmInfo","movementInfo","req","self","canvasComponent","child","childList","drawDiskSchedulingAlgorithm","getDiskAlgorithmComponent","displyProp","dpi","devicePixelRatio","arc","PI","beginPath","moveTo","lineTo","stroke","DiskSchedulingVisualizer","diskData","setDiskData","updateDiskData","for","drawSelectedDiskSchedulingAlgorithms","Footer","App","path","ReactDOM","render","root"],"mappings":"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","file":"static/js/main.8c69c3c5.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction Header() {\r\n  const closeBtn = useRef();\r\n  const navBtn=useRef();\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-expand-lg navbar-dark bg-dark\"\r\n      id=\"main-header\"\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand d-flex flex-md-row flex-column gap-1\" href=\"#\">\r\n            <span >Operating System</span>\r\n            <span>Resource Managment</span>\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n          ref={navBtn}\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ms-auto me-3 mt-1 mb-1 d-flex align-items-center gap-2\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active \" to=\"/home\" onClick={()=>navBtn.current.click()}>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item mb-2 mb-md-0 me-1\">\r\n              <Link className=\"nav-link active \" to=\"/about\"  onClick={()=>navBtn.current.click()}>\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className=\"btn btn-success btn-sm p-8\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"offcanvas\"\r\n                data-bs-target=\"#offcanvasExample\"\r\n                aria-controls=\"offcanvasExample\"\r\n                onClick={()=>navBtn.current.click()}\r\n              >\r\n                Resources\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"offcanvas offcanvas-start\"\r\n        tabIndex=\"-1\"\r\n        id=\"offcanvasExample\"\r\n        aria-labelledby=\"offcanvasExampleLabel\"\r\n      >\r\n        <div className=\"offcanvas-header\">\r\n          <h5 className=\"offcanvas-title mx-2\" id=\"offcanvasExampleLabel\">\r\n            Resources\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close text-reset me-3\"\r\n            data-bs-dismiss=\"offcanvas\"\r\n            aria-label=\"Close\"\r\n            ref={closeBtn}\r\n          ></button>\r\n        </div>\r\n        <div className=\"offcanvas-body\">\r\n          <div className=\"mb-4 p-2\">\r\n            <Link\r\n              to=\"/resource/cpu-scheduling\"\r\n              className=\"text-decoration-none text-dark d-flex justify-content-between align-items-center \"\r\n              onClick={() => closeBtn.current.click()}\r\n            >\r\n              <span>Cpu Scheduling</span>\r\n              <img src=\"https://img.icons8.com/material-rounded/48/000000/smartphone-cpu.png\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"mb-4 p-2 rounded\">\r\n            <Link\r\n              to=\"/resource/memory-managment\"\r\n              className=\"text-decoration-none text-dark d-flex justify-content-between align-items-center\"\r\n              onClick={() => closeBtn.current.click()}\r\n            >\r\n              <span>Memory Managment</span>\r\n              <img src=\"https://img.icons8.com/material-sharp/48/000000/smartphone-ram.png\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"mb-4 p-2\">\r\n            <Link\r\n              to=\"/resource/disk-scheduling\"\r\n              className=\"text-decoration-none text-dark d-flex justify-content-between align-items-center \"\r\n              onClick={() => closeBtn.current.click()}\r\n            >\r\n              <span>Disk Scheduling</span>\r\n              <img src=\"https://img.icons8.com/material-rounded/48/000000/hdd.png\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Header;\r\n","import { useEffect } from \"react\";\r\nexport default function useScrollIntoView(){\r\n    useEffect(()=>{\r\n        document.querySelector('nav').scrollIntoView();\r\n      },[]);\r\n}","import { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useScrollIntoView from \"./useScrollIntoView\";\r\n\r\nfunction Home(props) {\r\n  useScrollIntoView();\r\n  return (\r\n    <div className=\"container-fluid px-2\" style={{ minHeight: 80 + \"vh\" }}>\r\n      <h1 className=\"text-center mt-2 px-4 display-6\">\r\n        Operating System Resource Managment\r\n      </h1>\r\n      <div className=\"row flex-md-row flex-column mb-4\">\r\n        <div className=\"col-md-9 col-12 order-2\">\r\n          <p className=\"py-2 px-4 mb-0\" style={{ textAlign: \"justify\" }}>\r\n            OS resource manager is a visualizing tool made for visualizing\r\n            various alogrithms used is operating system to manage the resources\r\n            like centeral processing unit,main memory and secondary storage.An\r\n            operating system acts similarly like manager means an operating\r\n            system performs no useful function by itself; though it provides an\r\n            environment within which other programs can do useful work.\r\n          </p>\r\n          <p className=\"py-2 px-4 mb-0\">\r\n            The operating system can be viewed as a resource allocator.A\r\n            computer system consists of many resources that must be managed\r\n            efficiently. The operating system acts as the manager of the\r\n            resources, decides between conflicting requests, controls the\r\n            execution of programs, etc.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-3 col-5 mx-auto order-1\">\r\n          <img\r\n            src=\"https://img-premium.flaticon.com/png/512/4514/premium/4514981.png?token=exp=1627741262~hmac=2da21a928d5a7447f903f04500c151cd\"\r\n            alt=\"OS\"\r\n            className=\"d-block w-100 h-100\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <h1 className=\"text-center display-6 mb-2\">Resources</h1>\r\n        <div className=\"col-10 col-lg-4 mx-auto mb-2\">\r\n          <div className=\"card px-4 h-100\">\r\n            <h5 className=\"card-title text-center p-3\">Cpu scheduling</h5>\r\n            <img\r\n              src=\"https://cdn.pixabay.com/photo/2013/07/12/17/56/cpu-152656_1280.png\"\r\n              className=\"card-img-top mx-auto\"\r\n              alt=\"...\"\r\n            />\r\n            <div className=\"card-body d-flex flex-column justify-content-around\">\r\n              <p className=\"card-text\">\r\n                CPU Scheduling is a process of determining which process will\r\n                own CPU for execution while another process is on hold.\r\n              </p>\r\n              <p className=\"fw-bold\">\r\n                The tool implements various cpu scheduling algorithms like first\r\n                come first serve,shortest remaining time first,round robin etc\r\n                and provides output as:-\r\n              </p>\r\n              <ul className=\"list-group mb-4\">\r\n                <li className=\"list-group-item\">\r\n                  finish time,Turnaround around time,waiting time,response time\r\n                  for each process\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Timming diagram(gantt chart) of scheduling\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                className=\"btn btn-primary d-block mx-2 \"\r\n                to=\"resource/cpu-scheduling\"\r\n              >\r\n                Use Tool\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-10 col-lg-4 mx-auto mb-2\">\r\n          <div className=\"card px-4 h-100\">\r\n            <h5 className=\"card-title text-center p-3\">Memory Managment</h5>\r\n            <img\r\n              src=\"https://cdn3.iconfinder.com/data/icons/cloud-data-technology-2-4/65/65-512.png\"\r\n              className=\"card-img-top mx-auto\"\r\n              alt=\"...\"\r\n            />\r\n            <div className=\"card-body d-flex flex-column justify-content-around\">\r\n              <p className=\"card-text\">\r\n                Memory management is the functionality of an operating system\r\n                which handles or manages primary memory and moves processes back\r\n                and forth between main memory and disk during execution\r\n              </p>\r\n              <p className=\"fw-bold\">\r\n                The tool implements various Demand Paging algorithms like first\r\n                come first serve,Least recently use and optimal paging and\r\n                provides output as:-\r\n              </p>\r\n              <ul className=\"list-group mb-4\">\r\n                <li className=\"list-group-item\">\r\n                  Number of fault,Hit Ratio Miss Ratio\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Frame Diagrams for each page request\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                className=\"btn btn-primary d-block mx-2\"\r\n                to=\"resource/memory-managment\"\r\n              >\r\n                Use Tool\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-10 col-lg-4 mx-auto mb-2\">\r\n          <div className=\"card px-4 h-100\">\r\n            <h5 className=\"card-title text-center p-3\">Disk Scheduling</h5>\r\n            <img\r\n              src=\"https://www.iconfreepik.com/wp-content/uploads/2021/04/Hard-Drive-Icon-Png-Color.png\"\r\n              className=\"card-img-top mx-auto\"\r\n              alt=\"...\"\r\n            />\r\n            <div className=\"card-body d-flex flex-column justify-content-around\">\r\n              <p className=\"card-text\">\r\n                Disk scheduling is a technique used by the operating system to\r\n                schedule multiple requests for accessing the disk.\r\n              </p>\r\n              <p className=\"fw-bold\">\r\n                The tool implements various Disk Scheduling algorithms like\r\n                first come first serve,Scan,look and provides output as:-\r\n              </p>\r\n              <ul className=\"list-group mb-4\">\r\n                <li className=\"list-group-item\">\r\n                  Total head Movment for each algorithm\r\n                </li>\r\n                <li className=\"list-group-item\">Disk Scheduling Diagram</li>\r\n              </ul>\r\n              <Link\r\n                className=\"btn btn-primary d-block mx-2\"\r\n                to=\"resource/disk-scheduling\"\r\n              >\r\n                Use Tool\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import { useEffect, useRef } from \"react\";\r\nimport useScrollIntoView from \"./useScrollIntoView\";\r\n\r\nfunction About(props){\r\n    useScrollIntoView();\r\n    return(\r\n        <div ref={About} className=\"container-md\" style={{minHeight:80+'vh'}}>\r\n            <div className=\"row mt-2 px-4\">\r\n                <h1 className=\"display-5 text-center \">About</h1>\r\n                <p className=\"text-justify\"> Lorem ipsum dolor sit amet consectetur adipisicing elit. Eum necessitatibus beatae nulla, autem aperiam temporibus accusamus asperiores eveniet? Assumenda corporis ipsam eum fugit, quibusdam dolores debitis autem dicta placeat nobis consectetur quis ratione nam aspernatur eius nemo quae nihil, esse voluptate laudantium doloribus saepe ipsa optio dolorem? Iusto eveniet a omnis quos est nam aero fuga?</p>\r\n                <p className=\"text-justify\"> Lorem ipsum dolor sit amet consectetur adipisicing elit. Eum necessitatibus beatae nulla, autem aperiam temporibus accusamus asperiores eveniet? Assumenda corporis ipsam eum fugit, quibusdam dolores debitis autem dicta placeat nobis consectetur quis ratione nam aspernatur eius nemo quae nihil, esse voluptate laudantium doloribus saepe ipsa optio dolorem? Iusto eveniee nesciunt libero fuga?</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default About;","//arrival time->point of time at which process enter the scheduling queue.\r\n//burst time->duration required to excute the process.\r\n//completion time->point of time at which process is completed and moved out of scheduling queue\r\n//waiting time->totol duration of time in which process remain in queue{turn around time - burst time}\r\n//turn around time->total duration in which process remain in queue and excution{completion time - arrival time}  \r\n//response time->duration of time in which a process get scheduled for first time{point of time at which a process get cpu first time - arrival time}\r\nfunction processInfo(id,arrival,burst,priority){\r\n    this.id=id;\r\n    this.arrival=arrival;\r\n    this.burst=burst;\r\n    this.priority=priority;\r\n    this.remaining=burst;\r\n    this.finish=null;\r\n    this.turnaround=null;\r\n    this.wait=null;\r\n    this.response=null;\r\n}\r\nexport default class CpuScheduling{\r\n    constructor()\r\n    {\r\n\r\n    }\r\n    createProcessList(process_ary,sort_by)\r\n    {\r\n        let process_list=[],id=1;\r\n        for(let process of process_ary)\r\n        {\r\n            let new_process=new processInfo(id,process[0],process[1],process[2]);\r\n            process_list.push(new_process);\r\n            id+=1;\r\n        }\r\n        process_list.sort(sort_by);\r\n        return process_list;\r\n    }\r\n    updateGanttChart(old_time,new_time,process_id,result)\r\n    {\r\n        result.gantt_chart.push({\r\n            old_time,new_time,process_id\r\n        });\r\n    }\r\n    adjustTimingAndResponse(process,time_elapsed,result){\r\n        if(time_elapsed<process.arrival)\r\n        {\r\n            this.updateGanttChart(time_elapsed,process.arrival,\"cpu idle\",result);\r\n            time_elapsed=process.arrival;\r\n        }\r\n        if(process.response==null)\r\n            process.response=time_elapsed-process.arrival;\r\n        return time_elapsed;\r\n    }\r\n    calculateFinalState(process_list,result){\r\n        process_list.sort((a,b)=>a.id-b.id);\r\n        let length=process_list.length;\r\n        for(let process of process_list)\r\n        {\r\n            process.turnaround=process.finish-process.arrival;\r\n            result.avg_turnaround+=(process.turnaround)/length;\r\n            process.wait=process.turnaround-process.burst;\r\n            result.avg_wait+=(process.wait)/length;\r\n            result.avg_response+=(process.response)/length;\r\n        }\r\n        result.final_state=process_list;\r\n    }\r\n    firstComeFirstServe(process_ary){\r\n        let result={\r\n            avg_wait:0,\r\n            avg_turnaround:0,\r\n            avg_response:0,\r\n            gantt_chart:[],\r\n            process_list:null\r\n        };\r\n       \r\n        let process_list=this.createProcessList(process_ary,(a,b)=>{\r\n            if(a.arrival<b.arrival) return -1;\r\n            if(a.arrival==b.arrival) return a.id-b.id;\r\n            return 1;\r\n        });\r\n        let time_elapsed=0;\r\n        for(let process of process_list){\r\n            time_elapsed=this.adjustTimingAndResponse(process,time_elapsed,result);\r\n            let old_time=time_elapsed;\r\n            time_elapsed+=process.remaining;\r\n            let new_time=time_elapsed;\r\n            this.updateGanttChart(old_time,new_time,process.id,result);\r\n            process.remaining=0;\r\n            process.finish=time_elapsed;\r\n        }\r\n        this.calculateFinalState(process_list,result);\r\n        return result;\r\n    }\r\n    shortestJobFirst(process_ary)\r\n    {\r\n        let result={\r\n            avg_wait:0,\r\n            avg_turnaround:0,\r\n            avg_response:0,\r\n            gantt_chart:[],\r\n            process_list:null\r\n        };\r\n        \r\n        let process_list=this.createProcessList(process_ary,(a,b)=>{\r\n            if(a.arrival<b.arrival) return -1;\r\n            if(a.arrival==b.arrival) return a.burst-b.burst;\r\n            return 1;\r\n        });\r\n        let time_elapsed=0;\r\n        let shortest_job=process_list[0];\r\n        while(shortest_job){\r\n            time_elapsed=this.adjustTimingAndResponse(shortest_job,time_elapsed,result);\r\n            let old_time=time_elapsed;\r\n            time_elapsed+=shortest_job.remaining;\r\n            let new_time=time_elapsed;\r\n            this.updateGanttChart(old_time,new_time,shortest_job.id,result);\r\n            shortest_job.remaining=0;\r\n            shortest_job.finish=time_elapsed;\r\n            shortest_job=null;\r\n            for(let process of process_list){\r\n                if(!process.finish)\r\n                {\r\n                    if(!shortest_job)\r\n                        shortest_job=process;\r\n                    else if(shortest_job.burst>process.burst)\r\n                        shortest_job=process;\r\n                    else if(shortest_job.burst==process.burst&&shortest_job.arrival>process.arrival)\r\n                        shortest_job=process;\r\n                }\r\n            }\r\n        }\r\n        this.calculateFinalState(process_list,result);\r\n        return result;\r\n    }\r\n    shortestRemainingTimeFirst(process_ary){\r\n        let result={\r\n            avg_wait:0,\r\n            avg_turnaround:0,\r\n            avg_response:0,\r\n            gantt_chart:[],\r\n            process_list:null\r\n        };\r\n        \r\n        let process_list=this.createProcessList(process_ary,(a,b)=>{\r\n            if(a.arrival<b.arrival) return -1;\r\n            if(a.arrival==b.arrival) return a.burst-b.burst;\r\n            return 1;\r\n        });\r\n        let time_elapsed=0;\r\n        let shortest_job=process_list[0];\r\n        shortest_job.response=0;\r\n        while(shortest_job){\r\n            time_elapsed=this.adjustTimingAndResponse(shortest_job,time_elapsed,result);          \r\n            let next_arrived=null;\r\n            for(let process of process_list)\r\n            {\r\n                if(process.arrival<=time_elapsed||process.arrival>=time_elapsed+shortest_job.remaining) continue;\r\n                let time_before_arrival=process.arrival-time_elapsed;\r\n                if(shortest_job.remaining-time_before_arrival>=process.remaining)\r\n                {\r\n                    next_arrived=process;\r\n                    break;\r\n                }\r\n            }\r\n            let old_time=time_elapsed;\r\n            if(!next_arrived)\r\n            {\r\n                time_elapsed+=shortest_job.remaining;\r\n                shortest_job.remaining=0;\r\n                shortest_job.finish=time_elapsed;\r\n                for(let process of process_list)\r\n                {\r\n                    if(process.finish) continue;\r\n                    if(process.arrival<=time_elapsed)\r\n                    {\r\n                        if(!next_arrived)\r\n                            next_arrived=process;\r\n                        else if(next_arrived.remaining>process.remaining)\r\n                            next_arrived=process;\r\n                        else if(next_arrived.remaining==process.remaining&&next_arrived.arrival>process.arrival)\r\n                            next_arrived=process;\r\n                    }\r\n                    else if(!next_arrived)\r\n                    {\r\n                        next_arrived=process;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                shortest_job.remaining-=(next_arrived.arrival-time_elapsed);\r\n                time_elapsed=next_arrived.arrival;\r\n            }\r\n            let new_time=time_elapsed;\r\n            this.updateGanttChart(old_time,new_time,shortest_job.id,result);\r\n            shortest_job=next_arrived;\r\n        }\r\n        this.calculateFinalState(process_list,result);\r\n        return result;\r\n    }\r\n    roundRobin(process_ary,time_quantum){\r\n        let result={\r\n            avg_wait:0,\r\n            avg_turnaround:0,\r\n            avg_response:0,\r\n            gantt_chart:[],\r\n            process_list:null\r\n        };\r\n        \r\n        let process_list=this.createProcessList(process_ary,(a,b)=>{\r\n            if(a.arrival<b.arrival) return -1;\r\n            if(a.arrival==b.arrival) return a.burst-b.burst;\r\n            return 1;\r\n        });\r\n        let time_elapsed=0;\r\n        let ready_queue=[process_list[0]];\r\n        let top_process;\r\n        while(ready_queue.length)\r\n        {\r\n            top_process=ready_queue.shift();\r\n            time_elapsed=this.adjustTimingAndResponse(top_process,time_elapsed,result);\r\n            let run_time=top_process.remaining>time_quantum?time_quantum:top_process.remaining;\r\n            let next_arrived=null;\r\n            for(let process of process_list)\r\n            {\r\n                if(process.arrival<=time_elapsed||process.id==top_process.id) continue;\r\n                if(time_elapsed+run_time>=process.arrival)\r\n                {\r\n                    ready_queue.push(process);\r\n                }\r\n                else if(!ready_queue.length)\r\n                {\r\n                    next_arrived=process;\r\n                    break;\r\n                }\r\n            }\r\n            let old_time=time_elapsed;\r\n            time_elapsed+=run_time;\r\n            let new_time=time_elapsed;\r\n            this.updateGanttChart(old_time,new_time,top_process.id,result);\r\n            top_process.remaining-=run_time;\r\n            if(top_process.remaining==0)\r\n                top_process.finish=time_elapsed;\r\n            else\r\n                ready_queue.push(top_process);\r\n            if(!ready_queue.length&&next_arrived)\r\n                ready_queue.push(next_arrived);\r\n        }\r\n        this.calculateFinalState(process_list,result);\r\n        return result;\r\n    }\r\n    priorityNonPreemptive(process_ary,priority_cmp)\r\n    {\r\n        let result={\r\n            avg_wait:0,\r\n            avg_turnaround:0,\r\n            avg_response:0,\r\n            gantt_chart:[],\r\n            process_list:null\r\n        };\r\n        \r\n        let process_list=this.createProcessList(process_ary,(a,b)=>{\r\n            if(a.arrival<b.arrival) return -1;\r\n            if(a.arrival==b.arrival) return -1*priority_cmp(a,b);\r\n            return 1;\r\n        });\r\n        let time_elapsed=0;\r\n        let top_process=process_list[0];\r\n        while(top_process)\r\n        {\r\n            time_elapsed=this.adjustTimingAndResponse(top_process,time_elapsed,result);\r\n            let next_arrived=null;\r\n            for(let process of process_list)\r\n            {\r\n                if(process.finish||process.id==top_process.id) continue;\r\n                if(process.arrival<=time_elapsed+top_process.remaining)\r\n                {\r\n                    if(next_arrived==null) \r\n                        next_arrived=process;\r\n                    else if(priority_cmp(process,next_arrived)>0) \r\n                        next_arrived=process;\r\n                }\r\n                else{\r\n                    next_arrived=process;\r\n                    break;\r\n                }\r\n            }\r\n            let old_time=time_elapsed;\r\n            time_elapsed+=top_process.remaining;\r\n            let new_time=time_elapsed;\r\n            this.updateGanttChart(old_time,new_time,top_process.id,result);\r\n            top_process.remaining=0;\r\n            top_process.finish=time_elapsed;\r\n            top_process=next_arrived;\r\n        }\r\n        this.calculateFinalState(process_list,result);\r\n        return result;\r\n    }\r\n    priorityPreemptive(process_ary,priority_cmp)\r\n    {\r\n        let result={\r\n            avg_wait:0,\r\n            avg_turnaround:0,\r\n            avg_response:0,\r\n            gantt_chart:[],\r\n            process_list:null\r\n        };\r\n        let process_list=this.createProcessList(process_ary,(a,b)=>{\r\n            if(a.arrival<b.arrival) return -1;\r\n            if(a.arrival==b.arrival) return -1*priority_cmp(a,b);\r\n            return 1;\r\n        });\r\n        let time_elapsed=0;\r\n        let top_process=process_list[0];\r\n        while(top_process)\r\n        {\r\n            time_elapsed=this.adjustTimingAndResponse(top_process,time_elapsed,result);\r\n            let next_arrived=null;\r\n            for(let process of process_list)\r\n            {\r\n                if(process.arrival<=time_elapsed||process.arrival>=time_elapsed+top_process.remaining) continue;\r\n                if(priority_cmp(process,top_process)>=0)\r\n                {\r\n                    next_arrived=process;\r\n                    break;\r\n                }\r\n            }\r\n            let old_time=time_elapsed;\r\n            if(!next_arrived)\r\n            {\r\n                time_elapsed+=top_process.remaining;\r\n                top_process.remaining=0;\r\n                top_process.finish=time_elapsed;\r\n                for(let process of process_list)\r\n                {\r\n                    if(process.finish) continue;\r\n                    if(process.arrival<=time_elapsed)\r\n                    {\r\n                        if(!next_arrived)\r\n                            next_arrived=process;\r\n                        else if(priority_cmp(process,next_arrived)>0)\r\n                            next_arrived=process;\r\n                    }\r\n                    else if(!next_arrived)\r\n                    {\r\n                        next_arrived=process;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                top_process.remaining-=(next_arrived.arrival-time_elapsed);\r\n                time_elapsed=next_arrived.arrival;\r\n            }\r\n            let new_time=time_elapsed;\r\n            this.updateGanttChart(old_time,new_time,top_process.id,result);\r\n            top_process=next_arrived;\r\n        }\r\n        this.calculateFinalState(process_list,result);\r\n        return result;\r\n    }\r\n    showResult(result)\r\n    {\r\n        console.table(result.final_state);\r\n        for(let state of result.gantt_chart)\r\n            console.log(state.old_time+\" to \"+state.new_time+\" process:\"+state.process_id);\r\n        console.log(\"average turnaround time:\"+result.avg_turnaround);\r\n        console.log(\"average waiting time:\"+result.avg_wait);\r\n        console.log(\"average turnaround time:\"+result.avg_response);\r\n    }\r\n    showAllSchedulingAlgorithm(process_ary,time_quantum,priority_cmp)\r\n    {\r\n        let result;\r\n        console.log(\"<--FIRST COME FIRST SERVE SCHEDULING-->\");\r\n        result=this.firstComeFirstServe(process_ary);\r\n        this.showResult(result);\r\n        console.log(\"<--SHORTEST JOB FIRST SCHEDULING-->\");\r\n        result=this.shortestJobFirst(process_ary);\r\n        this.showResult(result);\r\n        console.log(\"<--SHORTEST REMAINING TIME FIRST SCHEDULING-->\");\r\n        result=this.shortestRemainingTimeFirst(process_ary);\r\n        this.showResult(result);\r\n        console.log(\"<--ROUND ROBIN SCHEDULING-->\");\r\n        result=this.roundRobin(process_ary,time_quantum);\r\n        this.showResult(result);\r\n        console.log(\"<--PRIORITY NON PREEMPTIVE SCHEDULING-->\");\r\n        result=this.priorityNonPreemptive(process_ary,priority_cmp);\r\n        this.showResult(result);\r\n        console.log(\"<--PRIORITY PREEMPTIVE SCHEDULING-->\");\r\n        result=this.priorityPreemptive(process_ary,priority_cmp);\r\n        this.showResult(result);\r\n    }\r\n}\r\n// let process_ary=[[0,5,10],[1,4,20],[2,2,30],[4,1,40]];\r\n// let cpu=new CpuScheduling();\r\n// let time_quantum=2;\r\n// let priority_greater=(a,b)=>a.priority>b.priority?1:a.priority==b.priority?0:-1;\r\n// let priority_lesser=(a,b)=>a.priority>b.priority?-1:a.priority==b.priority?0:1;\r\n// cpu.showAllSchedulingAlgorithm(process_ary,time_quantum,priority_greater);","import CpuScheduling from \"./cpu-scheduling\";\r\nexport class DrawCpuAlgorithmOnCanvas {\r\n  constructor(props) {\r\n    let cpuScheduler = new CpuScheduling();\r\n    this.priority_greater = (a, b) =>\r\n      a.priority > b.priority ? 1 : a.priority == b.priority ? 0 : -1;\r\n    this.priority_lesser = (a, b) =>\r\n      a.priority > b.priority ? -1 : a.priority == b.priority ? 0 : 1;\r\n    this.algorithms = {\r\n      fcfs: {\r\n        excute: cpuScheduler.firstComeFirstServe.bind(cpuScheduler),\r\n        name: \"FIRST COME FIRST SERVE\",\r\n      },\r\n      sjf: {\r\n        excute: cpuScheduler.shortestJobFirst.bind(cpuScheduler),\r\n        name: \"SHORTEST JOB FIRST\",\r\n      },\r\n      srtf: {\r\n        excute: cpuScheduler.shortestRemainingTimeFirst.bind(cpuScheduler),\r\n        name: \"SHORTEST REMAINING TIME FIRST\",\r\n      },\r\n      rr: {\r\n        excute: cpuScheduler.roundRobin.bind(cpuScheduler),\r\n        name: \"ROUND ROBIN\",\r\n      },\r\n      pnp: {\r\n        excute: cpuScheduler.priorityNonPreemptive.bind(cpuScheduler),\r\n        name: \"PRIORITY NON PREEMPTIVE\",\r\n      },\r\n      pp: {\r\n        excute: cpuScheduler.priorityPreemptive.bind(cpuScheduler),\r\n        name: \"PRIORITY PREEMPTIVE\",\r\n      },\r\n    };\r\n    this.colors=[\r\n      '#FF7171',\r\n      '#055052',\r\n      '#F5C0C0',\r\n      '#9FD8DF',\r\n      '#7952B3',\r\n      '#766161',\r\n      '#87A7B3',\r\n      '#ED8E7C',\r\n      '#CDF3A2',\r\n      '#93D9A3',\r\n    ]\r\n  }\r\n  drawSelectedCpuSchedulingAlgorithm(\r\n    container,\r\n    select,\r\n    process_ary,\r\n    time_quantum,\r\n    priority\r\n  ) {\r\n    let result,\r\n      width = window\r\n        .getComputedStyle(container)\r\n        .getPropertyValue(\"width\")\r\n        .slice(0, -2),\r\n      height = 300;\r\n    let display = container.style.display;\r\n    container.style.display='none';\r\n    container.innerHTML = \"\";\r\n    for (let type of select) {\r\n      if (type == \"rr\") {\r\n        result = this.algorithms[type].excute([...process_ary], time_quantum);\r\n      } else if (type == \"pp\" || type == \"pnp\") {\r\n        result = this.algorithms[type].excute(\r\n          [...process_ary],\r\n          priority == \"greater\" ? this.priority_greater : this.priority_lesser\r\n        );\r\n      } else {\r\n        result = this.algorithms[type].excute([...process_ary]);\r\n      }\r\n      console.log(result);\r\n      container.appendChild(\r\n        this.getFinalState(result,this.algorithms[type].name)\r\n      );\r\n      container.appendChild(\r\n        this.drawCpuSchedulingAlgorithm(\r\n          result.gantt_chart,\r\n          width * 0.9,\r\n          height\r\n        )\r\n      );\r\n    }\r\n    container.style.display = display;\r\n  }\r\n  getFinalState(result,algoName) {\r\n    let state = document.createElement(\"div\");\r\n    let algoInfo = document.createElement(\"h4\");\r\n    let averageInfo = document.createElement(\"div\");\r\n    let tableInfo = document.createElement(\"table\");\r\n    algoInfo.className = \"text-center\";\r\n    algoInfo.textContent = algoName;\r\n    averageInfo.innerHTML = `<span>average turnaround time:${result.avg_turnaround.toFixed(2)}</span><span>average waiting time:${result.avg_wait.toFixed(2)}</span><span>average response time:${result.avg_response.toFixed(2)}</span>`;\r\n    averageInfo.className=\"d-flex justify-content-between px-2\";\r\n    tableInfo.innerHTML = `<thead>\r\n      <tr>\r\n        <th scope='col'>process no.</th>\r\n        <th scope='col'>arrival time</th>\r\n        <th scope='col'>burst time</th>\r\n        <th scope='col'>priority</th>\r\n        <th scope='col'>turnaround time</th>\r\n        <th scope='col'>waiting time</th>\r\n        <th scope='col'>response time</th>\r\n      </tr>\r\n    </thead>`;\r\n    let body = \"<tbody>\";\r\n    for (let processInfo of result.final_state) {\r\n      body += `<tr><td>${processInfo.id}</td>\r\n      <td>${processInfo.arrival}</td>\r\n      <td>${processInfo.burst}</td>\r\n      <td>${processInfo.priority}</td>\r\n      <td>${processInfo.turnaround}</td>\r\n      <td>${processInfo.wait}</td>\r\n      <td>${processInfo.response}</td></tr>`;\r\n    }\r\n    body += \"</tbody>\";\r\n    tableInfo.innerHTML += body;\r\n    tableInfo.className = \"table table-striped text-center\";\r\n    state.appendChild(algoInfo);\r\n    state.appendChild(tableInfo);\r\n    state.appendChild(averageInfo);\r\n    return state;\r\n  }\r\n  drawCpuSchedulingAlgorithm(ganttChart, width, height) {\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.style.width = \"100%\";\r\n    let size = 30;\r\n    let font = size + \"px Arial\";\r\n    canvas.setAttribute(\"width\", (width *= 2.5));\r\n    canvas.setAttribute(\"height\", height);\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"#000000\";\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.lineWidth = 2;\r\n    let x = 20,\r\n      y = height / 3;\r\n    let factor = (width - 100) / ganttChart[ganttChart.length - 1].new_time;\r\n    ctx.font = font;\r\n    ctx.fillText(\"Gantt Chart\",size,50);\r\n    ctx.fillText(\"0\", x - size / 3, y - 10);\r\n    let prev_x = x,\r\n      rect_size = height * 0.2;\r\n    for (let process of ganttChart) {\r\n      let time = (process.new_time - process.old_time) * factor;\r\n      x = prev_x + time;\r\n      ctx.fillStyle =this.colors[process.process_id-1];\r\n      ctx.fillRect(prev_x, y, x, y + rect_size);\r\n      prev_x = x;\r\n      ctx.font = font;\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillText(\r\n        \"P\" + process.process_id,\r\n        x - time / 2 - size / 2,\r\n        y + rect_size + size / 2\r\n      );\r\n      ctx.fillText(process.new_time, x - size / 3, y - 10);\r\n    }\r\n    ctx.fillStyle = \"rgb(255,255,255)\";\r\n    ctx.fillRect(prev_x, y, width, y + rect_size);\r\n    return canvas;\r\n  }\r\n}\r\n","import { useState, useRef } from \"react\";\r\nimport { DrawCpuAlgorithmOnCanvas } from \"./os resources/DrawCpuAlgorithmsOnCanvas\";\r\nimport useScrollIntoView from \"./useScrollIntoView\";\r\nfunction renderCPUalgorithm(container, processData) {\r\n  let algoDrawer = new DrawCpuAlgorithmOnCanvas();\r\n  algoDrawer.drawSelectedCpuSchedulingAlgorithm(\r\n    container,\r\n    processData.select,\r\n    processData.process_ary,\r\n    processData.timeQuantum,\r\n    processData.priority\r\n  );\r\n  container.scrollIntoView();\r\n}\r\nfunction CpuSchedulingVisualizer(props) {\r\n  const [processes, setProcesses] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const resultContainer = useRef();\r\n  useScrollIntoView();\r\n  const addProcess = () => {\r\n    setProcesses((prevState) => {\r\n      const newState = [...prevState];\r\n      const newProcess = {\r\n        id: newState.length + 1,\r\n        arrival: \"\",\r\n        brust: \"\",\r\n        priority: 0,\r\n      };\r\n      newState.push(newProcess);\r\n      return newState;\r\n    });\r\n  };\r\n  const updateProcess = (prop, id, value) => {\r\n    setProcesses((prevState) => {\r\n      const newState = [...prevState];\r\n      const positiveNum = parseInt(value);\r\n      newState[id][prop] =\r\n        positiveNum !== NaN && positiveNum >= 0 ? positiveNum : \"\";\r\n      return newState;\r\n    });\r\n  };\r\n  const removeProcess = (remove_id) => {\r\n    setProcesses((prevState) => {\r\n      const newState = prevState.filter((item, id) => id !== remove_id);\r\n      for (let i = remove_id; i < newState.length; ++i) newState[i].id = i + 1;\r\n      return newState;\r\n    });\r\n  };\r\n  const submitProcess = () => {\r\n    const process_ary = [];\r\n    for (let process of processes) {\r\n      if (process.arrival === \"\" || process.brust === \"\") {\r\n        setError(\"process \" + process.id + \" has not enough parameter\");\r\n        return;\r\n      }\r\n      process_ary.push([process.arrival, process.brust, process.priority]);\r\n    }\r\n    if (process_ary.length === 0) {\r\n      setError(\"not enough process\");\r\n      return;\r\n    }\r\n    const select = [];\r\n    let timeQuantum, priority;\r\n    for (let algo of aglorithms) {\r\n      if (algo.selected) {\r\n        select.push(algo.id);\r\n        if (algo.id === \"rr\") timeQuantum = parseInt(algo.timeQuantum);\r\n        if (algo.id === \"pp\" || algo.id === \"pnp\") priority = algo.priority;\r\n      }\r\n    }\r\n    if (select.length === 0) {\r\n      setError(\"No Algorithm Selected\");\r\n      return;\r\n    }\r\n    if (!timeQuantum) timeQuantum = 4;\r\n    setError(\"\");\r\n    let visualizer=new DrawCpuAlgorithmOnCanvas();\r\n    visualizer.drawSelectedCpuSchedulingAlgorithm(\r\n      resultContainer.current,\r\n      select,\r\n      process_ary,\r\n      timeQuantum,\r\n      priority\r\n    );\r\n    resultContainer.current.scrollIntoView();\r\n  };\r\n  const [aglorithms, setAlgorithms] = useState([\r\n    {\r\n      id: \"fcfs\",\r\n      name: \"First Come First Serve\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"sjf\",\r\n      name: \"Shortest Job First\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"srtf\",\r\n      name: \"Shortest Remmaing time First\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"rr\",\r\n      name: \"Round Robin\",\r\n      selected: false,\r\n      timeQuantum: \"\",\r\n    },\r\n    {\r\n      id: \"pnp\",\r\n      name: \"Priority Non Preemptive\",\r\n      selected: false,\r\n      priority: \"lesser\",\r\n    },\r\n    {\r\n      id: \"pp\",\r\n      name: \"Priority Preemptive\",\r\n      selected: false,\r\n      priority: \"lesser\",\r\n    },\r\n  ]);\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <h1 className=\"display-6 text-center mb-4\">Cpu scheduling</h1>\r\n      <div\r\n        className=\"row mx-2 overflow-scroll\"\r\n        style={{ minHeight: 80 + \"vh\", maxHeight: 80 + \"vh\" }}\r\n      >\r\n        <div\r\n          className=\"col-lg-9 px-2 py-1 overflow-scroll\"\r\n          style={{ maxHeight: 100 + \"%\" }}\r\n        >\r\n          <div className=\"d-flex flex-md-row flex-column justify-content-between align-items-center px-2 gap-2\">\r\n            <div>\r\n              <button className=\"btn btn-primary me-2\" onClick={addProcess}>\r\n                Add Process\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger me-2\"\r\n                onClick={() => {\r\n                  setProcesses([]);\r\n                  setError([]);\r\n                  setAlgorithms((prevState) =>\r\n                    prevState.map((algo) => {\r\n                      return { ...algo, selected: false };\r\n                    })\r\n                  );\r\n                  resultContainer.current.innerHTML = \"\";\r\n                }}\r\n              >\r\n                clear all\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                onClick={submitProcess}\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n            {error && <p className=\"text-danger  m-0\">{error}</p>}\r\n          </div>\r\n          <table\r\n            className=\"table table-hover text-center\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">process no.</th>\r\n                <th scope=\"col\">arrival time</th>\r\n                <th scope=\"col\">brust time</th>\r\n                <th scope=\"col\">priority</th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {processes.map((process, index) => {\r\n                return (\r\n                  <tr key={process.id}>\r\n                    <th scope=\"row\">{process.id}</th>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={process.arrival}\r\n                        onChange={(e) =>\r\n                          updateProcess(\"arrival\", index, e.target.value)\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={process.brust}\r\n                        onChange={(e) =>\r\n                          updateProcess(\"brust\", index, e.target.value)\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={process.priority}\r\n                        onChange={(e) =>\r\n                          updateProcess(\"priority\", index, e.target.value)\r\n                        }\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn p-0 pb-2 mx-auto\"\r\n                        onClick={() => removeProcess(index)}\r\n                      >\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"20\"\r\n                          height=\"20\"\r\n                          fill=\"currentColor\"\r\n                          class=\"bi bi-trash-fill\"\r\n                          viewBox=\"0 0 16 16\"\r\n                        >\r\n                          <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\r\n                        </svg>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <h6>Cpu Scheduling Algorithms:-</h6>\r\n          {aglorithms.map((algo, index) => {\r\n            return (\r\n              <div className=\"form-check\" key={algo.id}>\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  value={algo.id}\r\n                  id={algo.id}\r\n                  checked={algo.selected}\r\n                  onChange={(e) =>\r\n                    setAlgorithms((prevState) => {\r\n                      const newState = [...prevState];\r\n                      newState[index].selected = e.target.checked;\r\n                      return newState;\r\n                    })\r\n                  }\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={algo.id}>\r\n                  {algo.name}\r\n                </label>\r\n                {algo.timeQuantum !== undefined && (\r\n                  <div className=\"input-group m-2\">\r\n                    <span className=\"input-group-text\">timeQuantum:</span>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                      value={algo.selected && algo.timeQuantum}\r\n                      onChange={(e) =>\r\n                        setAlgorithms((prevState) => {\r\n                          const newState = [...prevState];\r\n                          newState[index].timeQuantum = e.target.value;\r\n                          return newState;\r\n                        })\r\n                      }\r\n                      disabled={!algo.selected}\r\n                    />\r\n                  </div>\r\n                )}\r\n                {algo.priority && (\r\n                  <div className=\"form-check form-switch m-2\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      id={algo.id}\r\n                      checked={algo.priority === \"greater\" && algo.selected}\r\n                      disabled={!algo.selected}\r\n                      onChange={(e) =>\r\n                        setAlgorithms((prevState) => {\r\n                          const newState = [...prevState];\r\n                          newState[index].priority = e.target.checked\r\n                            ? \"greater\"\r\n                            : \"lesser\";\r\n                          return newState;\r\n                        })\r\n                      }\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor={algo.id}>\r\n                      greater value greater priority\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div ref={resultContainer} className=\"row px-3\" id=\"result-container\"></div>\r\n    </div>\r\n  );\r\n}\r\nexport default CpuSchedulingVisualizer;\r\n","export default class DemandPaging{\r\n    updateReplacement(frame_list,replacement_page,new_page,result,to_replace=true)\r\n    {\r\n        result.page_faults.push({\r\n            new_page,\r\n            frame_list:[...frame_list],\r\n            replacement_page,\r\n            to_replace\r\n        });\r\n    }\r\n    firstComeFirstOutReplacement(page_list,frame_size)\r\n    {\r\n        let result={\r\n            page_faults:[],\r\n            fault_count:0\r\n        };\r\n        let frame_list=[];\r\n        let first_come_page=0;\r\n        for(let page of page_list)\r\n        {\r\n            if(!frame_list.includes(page))\r\n            {\r\n                if(frame_list.length<frame_size)\r\n                {\r\n                    this.updateReplacement(frame_list,\"no replacement\",page,result,true);\r\n                    frame_list.push(page);\r\n                }\r\n                else\r\n                {\r\n                    this.updateReplacement(frame_list,frame_list[first_come_page],page,result,true);\r\n                    for(let page_idx in frame_list)\r\n                    {\r\n                        if(frame_list[first_come_page]===frame_list[page_idx])\r\n                        {\r\n                            frame_list[first_come_page]=page;\r\n                        }\r\n                    }\r\n                    first_come_page=(first_come_page+1)%frame_size;\r\n                }\r\n                result.fault_count+=1;\r\n            }\r\n            else{\r\n                this.updateReplacement(frame_list,\"no replacement\",page,result,false);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    leastRecentlyUsedReplacement(page_list,frame_size)\r\n    {\r\n        let result={\r\n            page_faults:[],\r\n            fault_count:0\r\n        };\r\n        let frame_list=[];\r\n        let lru_counter=[];\r\n        let count=0;\r\n        for(let page of page_list)\r\n        {\r\n            if(!frame_list.includes(page))\r\n            {\r\n                if(frame_list.length<frame_size)\r\n                {\r\n                    this.updateReplacement(frame_list,\"no replacement\",page,result,true);\r\n                    frame_list.push(page);\r\n                    lru_counter.push(count++);\r\n                }\r\n                else\r\n                {\r\n                    let lru_idx=0;\r\n                    for(let count_idx in lru_counter)\r\n                    {\r\n                        if(lru_counter[lru_idx]>lru_counter[count_idx])\r\n                        {\r\n                            lru_idx=count_idx;\r\n                        }\r\n                    }\r\n                    this.updateReplacement(frame_list,frame_list[lru_idx],page,result);\r\n                    lru_counter[lru_idx]=count++;\r\n                    frame_list[lru_idx]=page;\r\n                }\r\n                result.fault_count+=1;\r\n            }\r\n            else\r\n            {\r\n                for(let page_id in frame_list)\r\n                {\r\n                    if(frame_list[page_id]===page){\r\n                        lru_counter[page_id]=count++;\r\n                    }\r\n                }\r\n                this.updateReplacement(frame_list,\"no replacement\",page,result,false);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    optimalReplacement(page_list,frame_size)\r\n    {\r\n        let result={\r\n            page_faults:[],\r\n            fault_count:0\r\n        };\r\n        let frame_list=[];\r\n        let next_page_id_list=[];\r\n        let curr_idx=0;\r\n        for(let page of page_list)\r\n        {\r\n            let page_id=frame_list.indexOf(page);\r\n            if(page_id<0)\r\n            {\r\n                if(frame_list.length<frame_size)\r\n                {\r\n                    this.updateReplacement(frame_list,\"no replacment\",page,result,true);\r\n                    frame_list.push(page);\r\n                    let next_page_id=page_list.indexOf(page,curr_idx+1);\r\n                    if(next_page_id===-1) next_page_id=page_list.length+1;\r\n                    next_page_id_list.push({page,next_page_id});\r\n                }\r\n                else{\r\n                    //calulating the id of page which is to be used last \r\n                    let replacement=next_page_id_list[0];\r\n                    let old_id=0;\r\n                    for(let id in next_page_id_list)\r\n                    {\r\n                        if(next_page_id_list[id].next_page_id>replacement.next_page_id)\r\n                        {\r\n                            replacement=next_page_id_list[id];\r\n                            old_id=id;\r\n                        }\r\n                        \r\n                    }\r\n                    this.updateReplacement(frame_list,replacement.page,page,result);\r\n                    for(let frame_id in frame_list)\r\n                    {\r\n                        if(frame_list[frame_id]===replacement.page){\r\n                            frame_list[frame_id]=page;\r\n                            let next_page_id=page_list.indexOf(page,curr_idx+1);\r\n                            if(next_page_id===-1) next_page_id=page_list.length+1;\r\n                            next_page_id_list[old_id].page=page;\r\n                            next_page_id_list[old_id].next_page_id=next_page_id;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                result.fault_count+=1;\r\n            }\r\n            else\r\n            {\r\n                this.updateReplacement(frame_list,\"no replacement\",page,result,false);\r\n                //updating the next id of the page \r\n                let next_page_id=page_list.indexOf(page,curr_idx+1);\r\n                if(next_page_id===-1) \r\n                    next_page_id=page_list.length+1;\r\n                for(let present_page of next_page_id_list){\r\n                    if(frame_list[page_id]===present_page.page)\r\n                    {\r\n                        present_page.next_page_id=next_page_id;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            curr_idx+=1;\r\n        }\r\n        return result;\r\n    }\r\n    showResult(result){\r\n        for(let info of result.page_faults)\r\n        {\r\n            let info_str=info.new_page+\" | \";\r\n            for(let page of info.frame_list)\r\n            {\r\n                if(info.to_replace&&page===info.replacement_page)\r\n                    info_str+=\"->\"+page+\" \";\r\n                else\r\n                    info_str+=page+\" \";\r\n            }\r\n            info_str+=\"|\";\r\n            console.log(info_str);\r\n        }\r\n        let length=result.page_faults.length;\r\n        console.log(\"FAULT COUNT:\"+result.fault_count);\r\n        console.log(\"MISS RATIO:\"+result.fault_count*1.0/length);\r\n        console.log(\"HIT RATIO:\"+(1-(result.fault_count*1.0/length)));\r\n    }\r\n    showAllPagingAlgo(page_list,frame_size)\r\n    {\r\n        let result;\r\n        console.log(\"<--FIRST COME FIRST SERVER-->\");\r\n        result=this.firstComeFirstOutReplacement(page_list,frame_size);\r\n        this.showResult(result);\r\n        console.log(\"<--LEAST RECENTLY USED-->\");\r\n        result=this.leastRecentlyUsedReplacement(page_list,frame_size);\r\n        this.showResult(result);\r\n        console.log(\"<--OPTIMAL REPLACEMENT-->\");\r\n        result=this.optimalReplacement(page_list,frame_size);\r\n        this.showResult(result);\r\n    }\r\n}\r\n\r\n// let demand_paging=new DemandPaging();\r\n\r\n// let page_list=[1,2,3,3,2,1,5,4,1,3,2];\r\n\r\n// let frame_size=4;\r\n\r\n// demand_paging.showAllPagingAlgo(page_list,frame_size);","import DemandPaging from \"./memory-managment\";\r\nexport default class DrawDemandPagingOnCanvas{\r\n    constructor(){\r\n        let memory_manager=new DemandPaging();\r\n        this.algorithms={\r\n            fcfs:{\r\n                excute:memory_manager.firstComeFirstOutReplacement.bind(memory_manager),\r\n                name:\"First Come First Serve\"\r\n            },\r\n            optimal:{\r\n                excute:memory_manager.optimalReplacement.bind(memory_manager),\r\n                name:\"Optimal Paging\"\r\n            },\r\n            lru:{\r\n                excute:memory_manager.leastRecentlyUsedReplacement.bind(memory_manager),\r\n                name:\"Least Recently Used\"\r\n            }\r\n        }\r\n    }\r\n    drawSelectedMemoryManagmentAlgorithms(container,selected,pageList,frameSize)\r\n    {\r\n        let displayProp=container.style.display;\r\n        container.style.display='none';\r\n        container.innerHTML='';\r\n        for(let type of selected){\r\n            let result=this.algorithms[type].excute(pageList,frameSize);\r\n            console.log(result);\r\n            let algoInfo=this.getAglorithmData(this.algorithms[type].name,result.fault_count,pageList.length);\r\n            let canvas=this.drawMemoryManagmentAlgorithm(result.page_faults,frameSize);\r\n            container.appendChild(algoInfo);\r\n            container.appendChild(canvas);\r\n        }\r\n        container.style.display=displayProp;\r\n    }\r\n    getAglorithmData(name,faultCount,requests)\r\n    {\r\n        let agloData=document.createElement('div');\r\n        let algoName=document.createElement('h4');\r\n        algoName.textContent=name;\r\n        algoName.className=\"text-center\";\r\n        let algoInfo=document.createElement('p');\r\n        let missRatio=(faultCount/requests).toFixed(2);\r\n        let hitRatio=(1-missRatio).toFixed(2)\r\n        algoInfo.innerHTML=`<span>Number Of Page Faults:${faultCount}</span><span>Miss Ratio:${missRatio}</span><span>Hit Ratio:${hitRatio}</span>`;\r\n        algoInfo.className=\"d-flex text-center gap-4 justify-content-center\";\r\n        agloData.appendChild(algoName);\r\n        agloData.appendChild(algoInfo);\r\n        return agloData;\r\n    }\r\n    drawMemoryManagmentAlgorithm(pageFaults,frameSize)\r\n    {\r\n        console.log(pageFaults);\r\n        let canvas=document.createElement('div');\r\n        canvas.style.width=\"100%\";\r\n        canvas.className=\"d-flex flex-wrap justify-content-evenly p-4\";\r\n        for(let faultInfo of pageFaults)\r\n        {\r\n            let info=document.createElement('div');\r\n            info.className='d-flex flex-column text-center align-items-center me-4 mb-2'\r\n            let newPage=document.createElement('p');\r\n            newPage.textContent=faultInfo.new_page;\r\n            let frameList=document.createElement('div');\r\n            frameList.className=\"d-flex flex-column mb-2\"\r\n            for(let page of faultInfo.frame_list){\r\n                let pageInfo=document.createElement('p');\r\n                pageInfo.textContent=page;\r\n                pageInfo.className=\"p-2 border border-dark m-0\";\r\n                if(faultInfo.to_replace&&page==faultInfo.replacement_page)\r\n                    pageInfo.className+=\" bg-danger text-white\";\r\n                frameList.appendChild(pageInfo);\r\n            }\r\n            let status=document.createElement('p');\r\n            status.textContent=faultInfo.to_replace?'MISS':'HIT';\r\n            info.appendChild(newPage);\r\n            info.appendChild(frameList);\r\n            info.appendChild(status);\r\n            canvas.appendChild(info);\r\n        }\r\n        return canvas;\r\n    }    \r\n}","import { useEffect, useRef, useState } from \"react\";\r\nimport DrawDemandPagingOnCanvas from \"./os resources/DrawDemadPagingOnCanvas\";\r\nimport useScrollIntoView from \"./useScrollIntoView\";\r\n\r\nexport default function MemoryManagmentVisualizer(props) {\r\n  const [pagingData, setPagingData] = useState({\r\n    request: \"\",\r\n    frameSize: \"\",\r\n  });\r\n  useScrollIntoView();\r\n  const [error,setError]=useState('');\r\n  const resultContainer=useRef();\r\n  const updatePagingData=(value, prop)=>{\r\n    switch (prop) {\r\n      case \"request\":\r\n        const charCode = value.charCodeAt(value.length - 1);\r\n        if (\r\n          charCode === 44 ||\r\n          (charCode >= 48 && charCode <= 57) ||\r\n          charCode == 8 ||\r\n          value.length === 0\r\n        ) {\r\n          setPagingData((prevState) => {\r\n            return { ...prevState, request: value };\r\n          });\r\n        }\r\n        return;\r\n      default:\r\n        setPagingData((prevState) => {\r\n          return { ...prevState, [prop]: value };\r\n        });\r\n    }\r\n  }\r\n  const clearPagingData=()=>{\r\n    setPagingData({request:'',frameSize:''});\r\n    setAlgorithms((prevState)=>{\r\n      let newState=prevState.map((algo)=>{return {...algo,selected:false}});\r\n      return newState;\r\n    });\r\n    setError('');\r\n    resultContainer.current.innerHTMl='';\r\n  }\r\n  const submitPagingData=()=>{\r\n    let request,frameSize,selectedAlgo=[];\r\n    request=pagingData.request.split(',').map((strNum)=>parseInt(strNum));\r\n    frameSize=Math.abs(parseInt(pagingData.frameSize));\r\n    algorithms.forEach((algo)=>{\r\n      if(algo.selected) selectedAlgo.push(algo.id);\r\n    });\r\n    const endReq=request[request.length-1];\r\n    if(Object.is(endReq,NaN)){\r\n      request.pop();\r\n    } \r\n    if(request.length===0){\r\n      setError('no page list inputed');\r\n      return ;\r\n    }\r\n    if(selectedAlgo.length===0)\r\n    {\r\n      setError('no algorithm selected');\r\n      return;\r\n    }\r\n    if(Object.is(frameSize,NaN))\r\n    {\r\n      setError('invalid frame size inputed');\r\n      return;\r\n    }\r\n    if(frameSize<2){\r\n      setError('frame size should be at least 2');\r\n      return;\r\n    }\r\n    if(frameSize>10){\r\n      setError('frame size should be less than 10');\r\n      return;\r\n    }\r\n    setError('');\r\n    console.log(request,frameSize,selectedAlgo);\r\n    let visualizer=new DrawDemandPagingOnCanvas();\r\n    visualizer.drawSelectedMemoryManagmentAlgorithms(resultContainer.current,selectedAlgo,request,frameSize);\r\n    resultContainer.current.scrollIntoView();\r\n  }\r\n  const [algorithms, setAlgorithms] = useState([\r\n    {\r\n      id: \"fcfs\",\r\n      name: \"First Come First Serve\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"optimal\",\r\n      name: \"Optimal Algorithm\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"lru\",\r\n      name: \"Least Recently Algorithm\",\r\n      selected: false,\r\n    },\r\n  ]);\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <h1 className=\"display-6 text-center mb-2\">Demand Paging</h1>\r\n      <div className=\"row\" style={{ minHeight: 80 + \"vh\" }} id=\"input-data\">\r\n        <div className=\"col-lg-9 px-4\">\r\n          <form className=\"mb-4\" onSubmit={(e) => e.preventDefault()}>\r\n            <div className=\"row mb-3\">\r\n              <label  className=\"form-label px-2\">\r\n                Input the page number requests\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control mx-1\"\r\n                value={pagingData.request}\r\n                onChange={(e) => updatePagingData(e.target.value, \"request\")}\r\n              />\r\n              <div className=\"form-text mb-2\">\r\n                Seprate the requests with commas ',' only\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group mb-3 w-50\">\r\n              <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                Frame Size\r\n              </span>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={pagingData.frameSize}\r\n                onChange={(e) => updatePagingData(e.target.value, \"frameSize\")}\r\n              />\r\n            </div>\r\n            <div className=\"d-flex justify-content-end\">\r\n              <button className=\"btn btn-danger me-2\" onClick={clearPagingData}>Clear</button>\r\n              <button className=\"btn btn-success me-2\" onClick={submitPagingData}>Submit</button>\r\n            </div>\r\n          </form>\r\n          {error&&<p className=\"text-danger text-center\">{error}</p>}\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <h6>Demand Paging Algorithm:-</h6>\r\n          {algorithms.map((algo, index) => {\r\n            return (\r\n              <div className=\"form-check mb-2\" key={algo.id}>\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  value={algo.id}\r\n                  id={algo.id}\r\n                  checked={algo.selected}\r\n                  onChange={(e) =>\r\n                    setAlgorithms((prevState) => {\r\n                      const newState = [...prevState];\r\n                      newState[index].selected = e.target.checked;\r\n                      return newState;\r\n                    })\r\n                  }\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={algo.id}>\r\n                  {algo.name}\r\n                </label>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div ref={resultContainer} className=\"container-fluid\" id=\"result-container\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default class DiskScheduling {\r\n  constructor() {}\r\n  firstComeFirstServe(request, head) {\r\n    let result = {\r\n      history: [head],\r\n      movement: 0,\r\n    };\r\n    for (let block of request) {\r\n      result.movement += Math.abs(head - block);\r\n      result.history.push(block);\r\n      head = block;\r\n    }\r\n    return result;\r\n  }\r\n  shortestSeekTime(request, head) {\r\n    let result = {\r\n      history: [head],\r\n      movement: 0,\r\n    };\r\n    while (request.length > 0) {\r\n      let min_seek = 0;\r\n      for (let i = 1; i < request.length; ++i) {\r\n        if (Math.abs(head - request[min_seek]) > Math.abs(head - request[i]))\r\n          min_seek = i;\r\n      }\r\n      result.movement += Math.abs(head - request[min_seek]);\r\n      result.history.push(request[min_seek]);\r\n      head = request[min_seek];\r\n      request.splice(min_seek, 1);\r\n    }\r\n    return result;\r\n  }\r\n  Scan(request, head, end) {\r\n    let result = {\r\n      history: {\r\n        left: [head],\r\n        right: [head],\r\n      },\r\n      movement: {\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n    };\r\n    let temp = head;\r\n    request.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    let m;\r\n    for (m in request) {\r\n      if (request[m] >= head) break;\r\n    }\r\n    for (let i = m - 1; i >= 0; --i) {\r\n      result.movement.left += Math.abs(head - request[i]);\r\n      result.history.left.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    if(head!=0)\r\n    {\r\n      result.movement.left += head;\r\n      result.history.left.push(0);\r\n      head = 0;\r\n    }\r\n    for (let i = m; i < request.length; ++i) {\r\n      result.movement.left += Math.abs(head - request[i]);\r\n      result.history.left.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    head = temp;\r\n    for (let i = m; i < request.length; ++i) {\r\n      result.movement.right += Math.abs(head - request[i]);\r\n      result.history.right.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    if(head!=end)\r\n    {\r\n      result.movement.right += end - head;\r\n      result.history.right.push(end);\r\n      head = end;\r\n    }\r\n    for (let i = m - 1; i >= 0; --i) {\r\n      result.movement.right += Math.abs(head - request[i]);\r\n      result.history.right.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    return result;\r\n  }\r\n  Cscan(request, head, end) {\r\n    let result = {\r\n      history: {\r\n        left: [head],\r\n        right: [head],\r\n      },\r\n      movement: {\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n    };\r\n    let temp = head;\r\n    request.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    let m;\r\n    for (m in request) {\r\n      if (request[m] >= head) break;\r\n    }\r\n    for (let i = m - 1; i >= 0; --i) {\r\n      result.movement.left += Math.abs(head - request[i]);\r\n      result.history.left.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    if(head!=0){\r\n      result.movement.left += head;\r\n      result.history.left.push(0);\r\n      head = 0;\r\n    }\r\n    if(request[request.length-1]!=end){\r\n      result.movement.left += end;\r\n      result.history.left.push(end);\r\n      head = end;\r\n    }\r\n    for (let i = request.length - 1; i >= m; --i) {\r\n      result.movement.left += Math.abs(head - request[i]);\r\n      result.history.left.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    head = temp;\r\n    for (let i = m; i < request.length; ++i) {\r\n      result.movement.right += Math.abs(head - request[i]);\r\n      result.history.right.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    if(request[request.length-1]!=end){\r\n      result.movement.right += end - head;\r\n      result.history.right.push(end);\r\n      head = end;\r\n    }\r\n    if(request[0]!=0)\r\n    {\r\n      result.movement.right += end;\r\n      result.history.right.push(0);\r\n      head = 0;\r\n    }\r\n    for (let i = 0; i < m; ++i) {\r\n      result.movement.right += Math.abs(head - request[i]);\r\n      result.history.right.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    return result;\r\n  }\r\n  Look(request, head, end) {\r\n    let result = {\r\n      history: {\r\n        left: [head],\r\n        right: [head],\r\n      },\r\n      movement: {\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n    };\r\n    let temp = head;\r\n    request.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    let m;\r\n    for (m in request) {\r\n      if (request[m] >= head) break;\r\n    }\r\n    for (let i = m; i < request.length; ++i) {\r\n      result.movement.right += Math.abs(head - request[i]);\r\n      result.history.right.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    for (let i = m - 1; i >= 0; --i) {\r\n      result.movement.right += Math.abs(head - request[i]);\r\n      result.history.right.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    head = temp;\r\n    for (let i = m - 1; i >= 0; --i) {\r\n      result.movement.left += Math.abs(head - request[i]);\r\n      result.history.left.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    for (let i = m; i < request.length; ++i) {\r\n      result.movement.left += Math.abs(head - request[i]);\r\n      result.history.left.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    return result;\r\n  }\r\n  Clook(request, head, end) {\r\n    let result = {\r\n      history: {\r\n        left: [head],\r\n        right: [head],\r\n      },\r\n      movement: {\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n    };\r\n    let temp = head;\r\n    request.sort(function (a, b) {\r\n      return a - b;\r\n    });\r\n    let m;\r\n    for (m in request) {\r\n      if (request[m] >= head) break;\r\n    }\r\n    for (let i = m; i < request.length; ++i) {\r\n      result.movement.right += Math.abs(head - request[i]);\r\n      result.history.right.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    for (let i = 0; i < m; ++i) {\r\n      result.movement.right += Math.abs(head - request[i]);\r\n      result.history.right.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    head = temp;\r\n    for (let i = m - 1; i >= 0; --i) {\r\n      result.movement.left += Math.abs(head - request[i]);\r\n      result.history.left.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    for (let i = request.length - 1; i >= m; --i) {\r\n      result.movement.left += Math.abs(head - request[i]);\r\n      result.history.left.push(request[i]);\r\n      head = request[i];\r\n    }\r\n    return result;\r\n  }\r\n  ShowAllDiskAlgo(request, head, end, dir) {\r\n    console.table(this.firstComeFirstServe([...request], head));\r\n    console.table(this.shortestSeekTime([...request], head));\r\n    console.table(this.Scan([...request], head, end));\r\n    console.table(this.Look([...request], head, end));\r\n    console.table(this.Cscan([...request], head, end));\r\n    console.table(this.Clook([...request], head, end));\r\n  }\r\n}\r\n\r\n// let disk = new DiskScheduling();\r\n// let request = [40, 124, 22, 86, 132, 60, 185, 17];\r\n// let head = 50,\r\n//   end = 200;\r\n// disk.ShowAllDiskAlgo(request, head, end-1);\r\n","import DiskScheduling from \"./disk-scheduling\";\r\nexport default class drawDiskSchedulingAlgorithmOnCanvas {\r\n  constructor() {\r\n    let disk_scheduler = new DiskScheduling();\r\n    this.algorithms={\r\n      fcfs:{excute:disk_scheduler.firstComeFirstServe,name:\"FIRST COME FIRST SERVE\"},\r\n      sst:{excute:disk_scheduler.shortestSeekTime,name:\"SHORTEST SEEK TIME\"},\r\n      scan:{excute:disk_scheduler.Scan,name:\"SCAN\"},\r\n      look:{excute:disk_scheduler.Look,name:\"LOOK\"},\r\n      cscan:{excute:disk_scheduler.Cscan,name:\"C-SCAN\"},\r\n      clook:{excute:disk_scheduler.Clook,name:\"C-LOOK\"}\r\n    };\r\n  }\r\n  getDiskAlgorithmComponent(algorithm,movement,canvasInfo){\r\n    let container=document.createElement('div');\r\n    let algorithmInfo=document.createElement('h3');\r\n    algorithmInfo.textContent=algorithm;\r\n    let movementInfo=document.createElement('p');\r\n    movementInfo.textContent=\"MOVEMENT:\"+movement;\r\n    algorithmInfo.className=\"text-center mb-2\";\r\n    movementInfo.className=\"text-center mb-2\";\r\n    container.appendChild(algorithmInfo);\r\n    container.appendChild(movementInfo);\r\n    container.appendChild(canvasInfo);\r\n    return container;\r\n  }\r\n  drawSelectedDiskSchedulingAlgorithms(container,request,head,end,select){\r\n    //removes duplicate requests form the array + remove request greater than end\r\n    request=request.filter((req,id,self)=>{\r\n      return self.indexOf(req)===id&&req!=head&&req<=end&&req>=0;\r\n    });\r\n    let result,width=window.getComputedStyle(container).getPropertyValue('width').slice(0,-2),height=400;\r\n    console.log(width);\r\n    let childList=[];\r\n    let canvasComponent,child;\r\n    for(let type of select){\r\n      result=this.algorithms[type].excute([...request],head,end);\r\n      if(type=='fcfs'||type=='sst')\r\n      {\r\n        canvasComponent=this.drawDiskSchedulingAlgorithm(result.history,head,end,width,height);\r\n        child=this.getDiskAlgorithmComponent(this.algorithms[type].name,result.movement,canvasComponent);\r\n        childList.push(child);\r\n      }\r\n      else{\r\n        canvasComponent=this.drawDiskSchedulingAlgorithm(result.history.left,head,end,width,height);\r\n        child=this.getDiskAlgorithmComponent(this.algorithms[type].name+\" LEFT\",result.movement.left,canvasComponent);\r\n        childList.push(child);\r\n        canvasComponent=this.drawDiskSchedulingAlgorithm(result.history.right,head,end,width,height);\r\n        child=this.getDiskAlgorithmComponent(this.algorithms[type].name+\" RIGHT\",result.movement.right,canvasComponent);\r\n        childList.push(child);\r\n      }\r\n    }\r\n    let displyProp=container.style.display;\r\n    container.style.display='none';\r\n    container.innerHTML='';\r\n    for(let child of childList){\r\n      container.appendChild(child);\r\n    }\r\n    container.style.display=displyProp;\r\n  }\r\n  drawDiskSchedulingAlgorithm(history,head,end,width,height) {\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.style.width=\"100%\";\r\n    let size=30;\r\n    let font=size+\"px Arial\";\r\n    let dpi=window.devicePixelRatio;\r\n    canvas.setAttribute('width', width *= dpi);\r\n    canvas.setAttribute('height', height *= dpi);\r\n    let ctx = canvas.getContext(\"2d\");\r\n    ctx.strokeStyle = \"#000000\";\r\n    ctx.fillStyle = \"#000000\";\r\n    ctx.lineWidth = 2;\r\n    let padding=5;\r\n    let factor = (width-2*padding) / end;\r\n    let x = 0,y=0;\r\n    ctx.arc(head * factor+padding, y + 5, 5, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n    x = head * factor+padding;\r\n    y +=5;\r\n    ctx.font = font;\r\n    ctx.fillText(\"head:\" + head, x, y + 25);\r\n    history.shift();\r\n    for (let req of history) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, y);\r\n      if (x > req * factor + padding) ctx.textAlign = \"left\"; else ctx.textAlign = \"right\";\r\n      x = req * factor + padding;\r\n      y += (height - 100) / history.length;\r\n      ctx.lineTo(x, y);\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, 5, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.font = font;\r\n      ctx.fillText(req, x, y + 25);\r\n    }\r\n    return canvas;\r\n  }\r\n}\r\n","import { useState, useRef } from \"react\";\r\nimport drawDiskSchedulingAlgorithmOnCanvas from \"./os resources/DrawDiskAlgorithmOnCanvas\";\r\nimport useScrollIntoView from \"./useScrollIntoView\";\r\nexport default function DiskSchedulingVisualizer(props) {\r\n  const [diskData, setDiskData] = useState({\r\n    request: \"\",\r\n    head: \"\",\r\n    end: \"\",\r\n  });\r\n  useScrollIntoView();\r\n  const resultContainer = useRef();\r\n  const [error, setError] = useState(\"\");\r\n  const updateDiskData = (value, prop) => {\r\n    switch (prop) {\r\n      case \"request\":\r\n        const charCode = value.charCodeAt(value.length - 1);\r\n        if (\r\n          charCode === 44 ||\r\n          (charCode >= 48 && charCode <= 57) ||\r\n          charCode === 8 ||\r\n          value.length === 0\r\n        ) {\r\n          setDiskData((prevState) => {\r\n            return { ...prevState, request: value };\r\n          });\r\n        }\r\n        return;\r\n      default:\r\n        setDiskData((prevState) => {\r\n          return { ...prevState, [prop]: value };\r\n        });\r\n    }\r\n  };\r\n  const clearState = () => {\r\n    setAlgorithms((prevState) => {\r\n      const newState = prevState.map((algo) => {\r\n        return { ...algo, selected: false };\r\n      });\r\n      return newState;\r\n    });\r\n    setDiskData((prevState) => {\r\n      return {\r\n        request: \"\",\r\n        head: \"\",\r\n        end: \"\",\r\n      };\r\n    });\r\n    setError(\"\");\r\n    resultContainer.current.innerHTML = \"\";\r\n  };\r\n  const submitRequest = () => {\r\n    let request,\r\n      head,\r\n      end,\r\n      selectedAlgo = [];\r\n    request = diskData.request.split(\",\").map((strNum) => parseInt(strNum));\r\n    head = parseInt(diskData.head);\r\n    end = parseInt(diskData.end);\r\n    const endReq = request[request.length - 1];\r\n    if (Object.is(endReq, NaN)) {\r\n      request.pop();\r\n    }\r\n    if (request.length === 0) {\r\n      setError(\"no disk request inputed\");\r\n      return;\r\n    }\r\n    if (head >= end) {\r\n      setError(\"head cannot become greater than end\");\r\n      return;\r\n    }\r\n    algorithms.forEach((algo) => {\r\n      if (algo.selected) selectedAlgo.push(algo.id);\r\n    });\r\n    if (!selectedAlgo.length) {\r\n      setError(\"no algorithm selected\");\r\n      return;\r\n    }\r\n    setError(\"\");\r\n    let visualizer = new drawDiskSchedulingAlgorithmOnCanvas();\r\n    visualizer.drawSelectedDiskSchedulingAlgorithms(\r\n      resultContainer.current,\r\n      request,\r\n      head,\r\n      end - 1,\r\n      selectedAlgo\r\n    );\r\n    resultContainer.current.scrollIntoView();\r\n  };\r\n  const [algorithms, setAlgorithms] = useState([\r\n    {\r\n      id: \"fcfs\",\r\n      name: \"First Come First serve\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"sst\",\r\n      name: \"Shortest Seek Time\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"scan\",\r\n      name: \"Scan\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"look\",\r\n      name: \"Look\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"cscan\",\r\n      name: \"C-Scan\",\r\n      selected: false,\r\n    },\r\n    {\r\n      id: \"clook\",\r\n      name: \"C-Look\",\r\n      selected: false,\r\n    },\r\n  ]);\r\n  return (\r\n    <div class=\"container-fluid\">\r\n      <h3 class=\"display-6 text-center\">Disk Scheduling</h3>\r\n      <div class=\"row my-4\" style={{ minHeight: 80 + \"vh\" }}>\r\n        <div class=\"col-lg-9\">\r\n          <form class=\"mb-4 px-2\" onSubmit={(e) => e.preventDefault()}>\r\n            <div class=\"mb-3 me-5\">\r\n              <label for=\"\" class=\"form-label\">\r\n                Input the disk requests\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                value={diskData.request}\r\n                onChange={(e) => updateDiskData(e.target.value, \"request\")}\r\n              />\r\n              <div class=\"form-text mb-2\">\r\n                Seprate the requests with commas ','\r\n              </div>\r\n              <div class=\"row align-items-center mb-4\">\r\n                <div class=\"col-auto mb-2\">\r\n                  <div className=\"input-group\">\r\n                    <span class=\"input-group-text px-4\" id=\"basic-addon1\">\r\n                      Head\r\n                    </span>\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control\"\r\n                      value={diskData.head}\r\n                      onChange={(e) => updateDiskData(e.target.value, \"head\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-auto mb-2\">\r\n                  <div className=\"input-group\">\r\n                    <span class=\"input-group-text px-4\" id=\"basic-addon2\">\r\n                      End\r\n                    </span>\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control\"\r\n                      value={diskData.end}\r\n                      onChange={(e) => updateDiskData(e.target.value, \"end\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-2 d-flex justify-content-end\">\r\n                <button className=\"btn btn-danger me-2\" onClick={clearState}>\r\n                  Clear\r\n                </button>\r\n                <button class=\"btn btn-success\" onClick={submitRequest}>\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          {error && <p className=\"text-danger text-center mt-4\">{error}</p>}\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <form onSubmit={(e) => e.preventDefault()}>\r\n            <h6>Disk Scheduling Algorithms:-</h6>\r\n            {algorithms.map((algo, index) => {\r\n              return (\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    value={algo.id}\r\n                    id={algo.id}\r\n                    onChange={(e) =>\r\n                      setAlgorithms((prevState) => {\r\n                        const newState = [...prevState];\r\n                        newState[index].selected = e.target.checked;\r\n                        return newState;\r\n                      })\r\n                    }\r\n                  />\r\n                  <label class=\"form-check-label\" htmlFor={algo.id}>\r\n                    {algo.name}\r\n                  </label>\r\n                </div>\r\n              );\r\n            })}\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div\r\n        ref={resultContainer}\r\n        class=\"container-fluid\"\r\n        id=\"result-container\"\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"mt-5 pb-0 footer\">\r\n      <div className=\"container-fluid bg-dark text-white\">\r\n        <div className=\"row px-2 py-4\">\r\n          <div className=\"col-lg-5 col-xs-12 mb-3\">\r\n            <h4>Operating System Resource Managment</h4>\r\n            <p className=\"pr-5 \">\r\n              OS resource manager is a visualizing tool made for visualizing\r\n              various alogrithms used is operating system to manage the\r\n              resources like centeral processing unit,main memory and secondary\r\n              storage.\r\n            </p>\r\n            <p>\r\n              <a href=\"#\">\r\n                <i className=\"fa fa-facebook-square mr-1\"></i>\r\n              </a>\r\n              <a href=\"#\">\r\n                <i className=\"fa fa-linkedin-square\"></i>\r\n              </a>\r\n            </p>\r\n          </div>\r\n          <div className=\"col-lg-3 col-xs-12 mb-3 px-4\">\r\n            <h4 className=\"mt-lg-0 mt-sm-3\">Links</h4>\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <Link className=\"text-white d-block mb-2\" to=\"/home\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link className=\"text-white d-block mb-2\" to=\"/about\">\r\n                  About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-lg-4 col-xs-12 mb-3\">\r\n            <h4 className=\"mt-lg-0 mt-sm-4\">Contact</h4>\r\n            <p>22, Lorem ipsum dolor, consectetur adipiscing</p>\r\n            <p className=\"mb-0\">\r\n              <i className=\"fa fa-phone mr-3\"></i>(541) 754-3010\r\n            </p>\r\n            <p>\r\n              <i className=\"fa fa-envelope-o mr-3\"></i>kunalbabbar2843@gmail.com\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle\";\r\nimport Header from \"./Header\";\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport CpuSchedulingVisualizer from \"./CpuSchedulingVisulaizer\";\r\nimport MemoryManagmentVisualizer from \"./MemoryManagmentVisualizer\";\r\nimport DiskSchedulingVisualizer from \"./DiskSchedulingVisualizer\";\r\nimport Footer from \"./Footer\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nfunction App(props) {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/resource/cpu-scheduling\">\r\n            <CpuSchedulingVisualizer />\r\n          </Route>\r\n          <Route path=\"/resource/memory-managment\">\r\n            <MemoryManagmentVisualizer />\r\n          </Route>\r\n          <Route path=\"/resource/disk-scheduling\">\r\n            <DiskSchedulingVisualizer/>\r\n          </Route>\r\n          <Redirect to=\"/home\"/>\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nReactDOM.render(<App />, window.root);\r\n"],"sourceRoot":""}